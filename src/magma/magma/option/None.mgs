import java.util.function.Consumer;
import java.util.function.Function;
import java.util.function.Supplier;
export class def None<T>() => {Ok[value=
	def map(this : &This): Option<R> => {
		return new None<>();
	}
	def orElseGet(this : &This): T => {
		return other.get();
	}
	def ifPresent(this : &This): void => {
	}
	def flatMapValue(this : &This): Option<R> => {
		return new None<>();
	}
	def or(this : &This): Option<T> => {
		return supplier.get();
	}]
	impl Option<T>;
}