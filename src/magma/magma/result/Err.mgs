import java.util.function.Function;
import java.util.function.Supplier;
export class def Err<T, X>(error: X) => {
	def mapValue(self : &Self): X> => {
		return new Err<>(error);
	}
	def mapErr(self : &Self): R> => {
		return new Err<>(mapper.apply(error));
	}
	def match(self : &Self): R => {
		return onErr.apply(error);
	}
	def and(self : &Self): X> => {
		return new Err<>(error);
	}
	def flatMapValue(self : &Self): X> => {
		return new Err<>(error);
	}
	impl Result<T, X>;
}