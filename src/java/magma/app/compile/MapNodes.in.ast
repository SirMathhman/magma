{
"children": [package {
 "namespace": ["magma.app.compile"]
 }, import {
 "namespace": ["magma.java.JavaCollectors"]
 }, import {
 "namespace": ["java.util.HashMap"]
 }, import {
 "namespace": ["java.util.List"]
 }, import {
 "namespace": ["java.util.stream.Stream"]
 }, class {
 "name": "MapNodes ",
 "children": [method {
  "name": "merge0",
  "returns": symbol {
   "value": "MapNode"
   },
  "children": [declaration {
   "name": "stringsCopy",
   "caller": symbol {
    "content": "HashMap"
    },
   "returns": symbol {
    "value": "var"
    },
   "type-arguments": [symbol {
    "value": "String"
    }, symbol {
    "value": "String"
    }],
   "modifiers": [modifier {
    "modifier-value": "final"
    }]
   }, invocation {
   "caller": property-access {
    "child": "forEach",
    "parent": invocation {
     "caller": property-access {
      "child": "concat",
      "parent": symbol {
       "content": "Stream"
       }
      },
     "arguments": [invocation {
      "caller": property-access {
       "child": "stream",
       "parent": invocation {
        "caller": property-access {
         "child": "collect",
         "parent": invocation {
          "caller": property-access {
           "child": "streamStrings",
           "parent": symbol {
            "content": "self"
            }
           }
          }
         },
        "arguments": [invocation {
         "caller": property-access {
          "child": "asList",
          "parent": symbol {
           "content": "JavaCollectors"
           }
          }
         }]
        }
       }
      }, invocation {
      "caller": property-access {
       "child": "stream",
       "parent": invocation {
        "caller": property-access {
         "child": "collect",
         "parent": invocation {
          "caller": property-access {
           "child": "streamStrings",
           "parent": symbol {
            "content": "other"
            }
           }
          }
         },
        "arguments": [invocation {
         "caller": property-access {
          "child": "asList",
          "parent": symbol {
           "content": "JavaCollectors"
           }
          }
         }]
        }
       }
      }]
     }
    },
   "arguments": [invocation {
    "caller": property-access {
     "child": "put",
     "parent": lambda {
      "before-arrow": "tuple ",
      "after-arrow": " stringsCopy"
      }
     },
    "arguments": [invocation {
     "caller": property-access {
      "child": "left",
      "parent": symbol {
       "content": "tuple"
       }
      }
     }, invocation {
     "caller": property-access {
      "child": "right",
      "parent": symbol {
       "content": "tuple"
       }
      }
     }]
    }]
   }, declaration {
   "name": "stringListCopy",
   "caller": symbol {
    "content": "HashMap"
    },
   "returns": symbol {
    "value": "var"
    },
   "type-arguments": [symbol {
    "value": "String"
    }, generic {
    "base": symbol {
     "value": "List"
     },
    "children": [symbol {
     "value": "String"
     }]
    }],
   "modifiers": [modifier {
    "modifier-value": "final"
    }]
   }, invocation {
   "caller": property-access {
    "child": "forEach",
    "parent": invocation {
     "caller": property-access {
      "child": "concat",
      "parent": symbol {
       "content": "Stream"
       }
      },
     "arguments": [invocation {
      "caller": property-access {
       "child": "stream",
       "parent": invocation {
        "caller": property-access {
         "child": "collect",
         "parent": invocation {
          "caller": property-access {
           "child": "streamStringLists",
           "parent": symbol {
            "content": "self"
            }
           }
          }
         },
        "arguments": [invocation {
         "caller": property-access {
          "child": "asList",
          "parent": symbol {
           "content": "JavaCollectors"
           }
          }
         }]
        }
       }
      }, invocation {
      "caller": property-access {
       "child": "stream",
       "parent": invocation {
        "caller": property-access {
         "child": "collect",
         "parent": invocation {
          "caller": property-access {
           "child": "streamStringLists",
           "parent": symbol {
            "content": "other"
            }
           }
          }
         },
        "arguments": [invocation {
         "caller": property-access {
          "child": "asList",
          "parent": symbol {
           "content": "JavaCollectors"
           }
          }
         }]
        }
       }
      }]
     }
    },
   "arguments": [invocation {
    "caller": property-access {
     "child": "put",
     "parent": lambda {
      "before-arrow": "tuple ",
      "after-arrow": " stringListCopy"
      }
     },
    "arguments": [invocation {
     "caller": property-access {
      "child": "left",
      "parent": symbol {
       "content": "tuple"
       }
      }
     }, invocation {
     "caller": property-access {
      "child": "right",
      "parent": symbol {
       "content": "tuple"
       }
      }
     }]
    }]
   }, declaration {
   "name": "nodesCopy",
   "caller": symbol {
    "content": "HashMap"
    },
   "returns": symbol {
    "value": "var"
    },
   "type-arguments": [symbol {
    "value": "String"
    }, symbol {
    "value": "Node"
    }],
   "modifiers": [modifier {
    "modifier-value": "final"
    }]
   }, invocation {
   "caller": property-access {
    "child": "forEach",
    "parent": invocation {
     "caller": property-access {
      "child": "concat",
      "parent": symbol {
       "content": "Stream"
       }
      },
     "arguments": [invocation {
      "caller": property-access {
       "child": "stream",
       "parent": invocation {
        "caller": property-access {
         "child": "collect",
         "parent": invocation {
          "caller": property-access {
           "child": "streamNodes",
           "parent": symbol {
            "content": "self"
            }
           }
          }
         },
        "arguments": [invocation {
         "caller": property-access {
          "child": "asList",
          "parent": symbol {
           "content": "JavaCollectors"
           }
          }
         }]
        }
       }
      }, invocation {
      "caller": property-access {
       "child": "stream",
       "parent": invocation {
        "caller": property-access {
         "child": "collect",
         "parent": invocation {
          "caller": property-access {
           "child": "streamNodes",
           "parent": symbol {
            "content": "other"
            }
           }
          }
         },
        "arguments": [invocation {
         "caller": property-access {
          "child": "asList",
          "parent": symbol {
           "content": "JavaCollectors"
           }
          }
         }]
        }
       }
      }]
     }
    },
   "arguments": [invocation {
    "caller": property-access {
     "child": "put",
     "parent": lambda {
      "before-arrow": "tuple ",
      "after-arrow": " nodesCopy"
      }
     },
    "arguments": [invocation {
     "caller": property-access {
      "child": "left",
      "parent": symbol {
       "content": "tuple"
       }
      }
     }, invocation {
     "caller": property-access {
      "child": "right",
      "parent": symbol {
       "content": "tuple"
       }
      }
     }]
    }]
   }, declaration {
   "name": "nodeListCopy",
   "caller": symbol {
    "content": "HashMap"
    },
   "returns": symbol {
    "value": "var"
    },
   "type-arguments": [symbol {
    "value": "String"
    }, generic {
    "base": symbol {
     "value": "List"
     },
    "children": [symbol {
     "value": "Node"
     }]
    }],
   "modifiers": [modifier {
    "modifier-value": "final"
    }]
   }, invocation {
   "caller": property-access {
    "child": "forEach",
    "parent": invocation {
     "caller": property-access {
      "child": "concat",
      "parent": symbol {
       "content": "Stream"
       }
      },
     "arguments": [invocation {
      "caller": property-access {
       "child": "stream",
       "parent": invocation {
        "caller": property-access {
         "child": "collect",
         "parent": invocation {
          "caller": property-access {
           "child": "streamNodeLists",
           "parent": symbol {
            "content": "self"
            }
           }
          }
         },
        "arguments": [invocation {
         "caller": property-access {
          "child": "asList",
          "parent": symbol {
           "content": "JavaCollectors"
           }
          }
         }]
        }
       }
      }, invocation {
      "caller": property-access {
       "child": "stream",
       "parent": invocation {
        "caller": property-access {
         "child": "collect",
         "parent": invocation {
          "caller": property-access {
           "child": "streamNodeLists",
           "parent": symbol {
            "content": "other"
            }
           }
          }
         },
        "arguments": [invocation {
         "caller": property-access {
          "child": "asList",
          "parent": symbol {
           "content": "JavaCollectors"
           }
          }
         }]
        }
       }
      }]
     }
    },
   "arguments": [invocation {
    "caller": property-access {
     "child": "put",
     "parent": lambda {
      "before-arrow": "tuple ",
      "after-arrow": " nodeListCopy"
      }
     },
    "arguments": [invocation {
     "caller": property-access {
      "child": "left",
      "parent": symbol {
       "content": "tuple"
       }
      }
     }, invocation {
     "caller": property-access {
      "child": "right",
      "parent": symbol {
       "content": "tuple"
       }
      }
     }]
    }]
   }, return {
   "value": construction {
    "caller": symbol {
     "content": "MapNode"
     },
    "arguments": [invocation {
     "caller": property-access {
      "child": "findType",
      "parent": symbol {
       "content": "self"
       }
      }
     }, symbol {
     "content": "stringsCopy"
     }, symbol {
     "content": "stringListCopy"
     }, symbol {
     "content": "nodesCopy"
     }, symbol {
     "content": "nodeListCopy"
     }]
    }
   }, whitespace {
   }],
  "modifiers": [modifier {
   "modifier-value": "static"
   }],
  "params": [definition {
   "name": "self",
   "returns": symbol {
    "value": "MapNode"
    }
   }, definition {
   "name": "other",
   "returns": symbol {
    "value": "Node"
    }
   }]
  }, whitespace {
  }],
 "modifiers": [modifier {
  "modifier-value": "public"
  }]
 }, whitespace {
 }]
}