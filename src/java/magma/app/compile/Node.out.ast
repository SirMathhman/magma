{
"children": [import {
 "namespace": ["magma", "api", "Tuple"]
 }, import {
 "namespace": ["java", "util", "List"]
 }, import {
 "namespace": ["java", "util", "Optional"]
 }, import {
 "namespace": ["java", "util", "function", "Function"]
 }, import {
 "namespace": ["java", "util", "stream", "Stream"]
 }, trait {
 "name": "Node",
 "modifiers": [modifier {
  "content": "public"
  }],
 "content": [method {
  "name": "retype",
  "before-name": "Node",
  "params": [definition {
   "name": "type",
   "before-name": "String"
   }]
  }, method {
  "name": "is",
  "before-name": "boolean",
  "params": [definition {
   "name": "type",
   "before-name": "String"
   }]
  }, method {
  "name": "withString",
  "before-name": "Node",
  "params": [definition {
   "name": "propertyKey",
   "before-name": "String"
   }, definition {
   "name": "propertyValue",
   "before-name": " String"
   }]
  }, method {
  "name": "findString",
  "before-name": "Optional<String>",
  "params": [definition {
   "name": "propertyKey",
   "before-name": "String"
   }]
  }, method {
  "name": "mapNodeList",
  "before-name": "Optional<Node>",
  "params": [definition {
   "name": "propertyKey",
   "before-name": "String"
   }, definition {
   "name": "mapper",
   "before-name": " Function<List<Node>, List<Node>>"
   }]
  }, method {
  "name": "findNodeList",
  "before-name": "Optional<List<Node>>",
  "params": [definition {
   "name": "propertyKey",
   "before-name": "String"
   }]
  }, method {
  "name": "withNodeList",
  "before-name": "Node",
  "params": [definition {
   "name": "propertyKey",
   "before-name": "String"
   }, definition {
   "name": "values",
   "before-name": " List<Node>"
   }]
  }, method {
  "name": "format",
  "before-name": "String",
  "params": [definition {
   "name": "depth",
   "before-name": "int"
   }]
  }, method {
  "name": "merge",
  "before-name": "Node",
  "params": [definition {
   "name": "other",
   "before-name": "Node"
   }]
  }, method {
  "name": "streamStrings",
  "before-name": "Stream<Tuple<String, String>>",
  "params": []
  }, method {
  "name": "streamNodeLists",
  "before-name": "Stream<Tuple<String, List<Node>>>",
  "params": []
  }, method {
  "name": "withNode",
  "before-name": "Node",
  "params": [definition {
   "name": "propertyKey",
   "before-name": "String"
   }, definition {
   "name": "propertyValue",
   "before-name": " Node"
   }]
  }, method {
  "name": "findNode",
  "before-name": "Optional<Node>",
  "params": [definition {
   "name": "propertyKey",
   "before-name": "String"
   }]
  }, method {
  "name": "streamNodes",
  "before-name": "Stream<Tuple<String, Node>>",
  "params": []
  }, method {
  "name": "hasNode",
  "before-name": "boolean",
  "params": [definition {
   "name": "node",
   "before-name": "String"
   }]
  }, method {
  "name": "withStringList",
  "before-name": "Node",
  "params": [definition {
   "name": "propertyKey",
   "before-name": "String"
   }, definition {
   "name": "propertyValues",
   "before-name": " List<String>"
   }]
  }, method {
  "name": "findStringList",
  "before-name": "Optional<List<String>>",
  "params": [definition {
   "name": "propertyKey",
   "before-name": "String"
   }]
  }, method {
  "name": "streamStringLists",
  "before-name": "Stream<Tuple<String, List<String>>>",
  "params": []
  }, method {
  "name": "mapStringList",
  "before-name": "Optional<Node>",
  "params": [definition {
   "name": "propertyKey",
   "before-name": "String"
   }, definition {
   "name": "mapper",
   "before-name": " Function<List<String>, List<String>>"
   }]
  }]
 }]
}