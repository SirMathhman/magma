{
"children": [package {
 "namespace": ["magma", "app", "compile", "rule"]
 }, import {
 "namespace": ["java", "util", "Optional"]
 }, import {
 "namespace": ["java", "util", "stream", "Stream"]
 }, record {
 "name": "LastLocator",
 "interface": symbol {
  "value": "Locator"
  },
 "modifiers": [modifier {
  "content": "public"
  }],
 "params": [definition {
  "name": "slice",
  "before-name": "String"
  }],
 "children": [method {
  "name": "locate0",
  "before-name": "private Optional<Integer>",
  "children": [symbol {
   "content": "final var index = input.lastIndexOf(slice);"
   }, return {
   "value": invocation {
    "caller": access {
     "name": "empty",
     "parent": symbol {
      "content": "index == -1 ? Optional"
      }
     },
    "arguments": [access {
     "name": "of(index",
     "parent": symbol {
      "content": ") : Optional"
      }
     }]
    }
   }],
  "params": [definition {
   "name": "input",
   "before-name": "String"
   }]
  }, method {
  "name": "locate",
  "before-name": "@Override
    public Stream<Integer>",
  "children": [return {
   "value": invocation {
    "caller": symbol {
     "content": "locate0"
     },
    "arguments": [access {
     "name": "stream(",
     "parent": symbol {
      "content": "input)"
      }
     }]
    }
   }],
  "params": [definition {
   "name": "input",
   "before-name": "String"
   }]
  }]
 }]
}