{
"children": [package {
 "namespace": "magma.app.compile.rule"
 }, import {
 "namespace": "magma.api.result.Err"
 }, import {
 "namespace": "magma.api.result.Ok"
 }, import {
 "namespace": "magma.app.compile.GenerateException"
 }, import {
 "namespace": "magma.app.compile.MapNode"
 }, import {
 "namespace": "magma.app.compile.Node"
 }, import {
 "namespace": "magma.app.compile.ParseException"
 }, class {
 "name": "EmptyRule implements Rule ",
 "body": "
    @Override
    public RuleResult<Node, ParseException> parse(String input) {
        return input.isEmpty()
                ? new RuleResult<>(new Ok<>(new MapNode()))
                : new RuleResult<>(new Err<>(new ParseException("Input is not empty", input)));
    }

    @Override
    public RuleResult<String, GenerateException> generate(Node node) {
        return new RuleResult<>(new Ok<>(""));
    }
}",
 "before-keyword": "public "
 }]
}