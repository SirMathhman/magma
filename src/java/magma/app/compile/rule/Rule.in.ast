{
"children": [package {
 "namespace": ["magma", "app", "compile", "rule"]
 }, import {
 "namespace": ["magma", "app", "compile", "GenerateException"]
 }, import {
 "namespace": ["magma", "app", "compile", "Node"]
 }, import {
 "namespace": ["magma", "app", "compile", "ParseException"]
 }, interface {
 "name": "Rule",
 "modifiers": ["public"],
 "content": [method {
  "name": "parse",
  "modifiers": ["RuleResult<Node,"],
  "params": definition {
   "type": "String",
   "name": "input"
   },
  "returns": symbol {
   "type": "ParseException>"
   }
  }, method {
  "name": "generate",
  "modifiers": ["RuleResult<String,"],
  "params": definition {
   "type": "Node",
   "name": "node"
   },
  "returns": symbol {
   "type": "GenerateException>"
   }
  }]
 }]
}