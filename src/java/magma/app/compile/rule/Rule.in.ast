{
"children": [package {
 "namespace": ["magma", "app", "compile", "rule"]
 }, import {
 "namespace": ["magma", "app", "compile", "GenerateException"]
 }, import {
 "namespace": ["magma", "app", "compile", "Node"]
 }, import {
 "namespace": ["magma", "app", "compile", "ParseException"]
 }, interface {
 "name": "Rule",
 "modifiers": [modifier {
  "content": "public"
  }],
 "content": [method {
  "name": "parse",
  "params": definition {
   "name": "input",
   "type": symbol {
    "type": "String"
    }
   },
  "returns": generic {
   "base": symbol {
    "type": "RuleResult"
    },
   "children": [symbol {
    "type": "Node"
    }, symbol {
    "type": "ParseException"
    }]
   }
  }, method {
  "name": "generate",
  "params": definition {
   "name": "node",
   "type": symbol {
    "type": "Node"
    }
   },
  "returns": generic {
   "base": symbol {
    "type": "RuleResult"
    },
   "children": [symbol {
    "type": "String"
    }, symbol {
    "type": "GenerateException"
    }]
   }
  }]
 }]
}