{
"children": [package {
 "namespace": [segment {
  "segment": "magma"
  }, segment {
  "segment": "app"
  }, segment {
  "segment": "compile"
  }, segment {
  "segment": "pass"
  }]
 }, import {
 "namespace": [segment {
  "segment": "magma"
  }, segment {
  "segment": "app"
  }, segment {
  "segment": "compile"
  }, segment {
  "segment": "Node"
  }]
 }, import {
 "namespace": [segment {
  "segment": "magma"
  }, segment {
  "segment": "app"
  }, segment {
  "segment": "compile"
  }, segment {
  "segment": "lang"
  }, segment {
  "segment": "CommonLang"
  }]
 }, import {
 "namespace": [segment {
  "segment": "java"
  }, segment {
  "segment": "util"
  }, segment {
  "segment": "Optional"
  }]
 }, import-static {
 "namespace": [segment {
  "segment": "magma"
  }, segment {
  "segment": "app"
  }, segment {
  "segment": "compile"
  }, segment {
  "segment": "lang"
  }, segment {
  "segment": "CommonLang"
  }, segment {
  "segment": "IMPORT_TYPE"
  }]
 }, import-static {
 "namespace": [segment {
  "segment": "magma"
  }, segment {
  "segment": "app"
  }, segment {
  "segment": "compile"
  }, segment {
  "segment": "lang"
  }, segment {
  "segment": "JavaLang"
  }, segment {
  "segment": "IMPORT_STATIC_TYPE"
  }]
 }, class {
 "name": "ImportPasser ",
 "children": [method {
  "name": "pass",
  "returns": generic {
   "base": symbol {
    "namespace": [segment {
     "segment": "Optional"
     }]
    },
   "children": [symbol {
    "namespace": [segment {
     "segment": "Node"
     }]
    }]
   },
  "children": [if {
   "content": " (node.is(IMPORT_TYPE)) {
            return Optional.of(attachPadding(node));
        }"
   }, if {
   "content": " (node.is(IMPORT_STATIC_TYPE)) {
            return Optional.of(attachPadding(node.retype(IMPORT_TYPE)));
        }"
   }, return {
   "value": invocation {
    "caller": property-access {
     "child": "empty",
     "parent": symbol {
      "content": "Optional"
      }
     }
    }
   }, whitespace {
   }],
  "modifiers": [modifier {
   "modifier-value": "public"
   }, modifier {
   "modifier-value": "static"
   }],
  "params": [definition {
   "name": "node",
   "returns": symbol {
    "namespace": [segment {
     "segment": "Node"
     }]
    }
   }]
  }, method {
  "name": "attachPadding",
  "returns": symbol {
   "namespace": [segment {
    "segment": "Node"
    }]
   },
  "children": [return {
   "value": invocation {
    "caller": property-access {
     "child": "withString",
     "parent": symbol {
      "content": "node"
      }
     },
    "arguments": [property-access {
     "child": "AFTER_IMPORT",
     "parent": symbol {
      "content": "CommonLang"
      }
     }, string {
     "value": "\n"
     }]
    }
   }, whitespace {
   }],
  "modifiers": [modifier {
   "modifier-value": "private"
   }, modifier {
   "modifier-value": "static"
   }],
  "params": [definition {
   "name": "node",
   "returns": symbol {
    "namespace": [segment {
     "segment": "Node"
     }]
    }
   }]
  }, whitespace {
  }],
 "modifiers": [modifier {
  "modifier-value": "public"
  }]
 }]
}