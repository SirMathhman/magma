{
"children": [import {
 "after-import": "
",
 "namespace": [segment {
  "segment": "magma"
  }, segment {
  "segment": "app"
  }, segment {
  "segment": "compile"
  }, segment {
  "segment": "rule"
  }, segment {
  "segment": "Splitter"
  }]
 }, import {
 "after-import": "
",
 "namespace": [segment {
  "segment": "java"
  }, segment {
  "segment": "util"
  }, segment {
  "segment": "List"
  }]
 }, import {
 "after-import": "
",
 "namespace": [segment {
  "segment": "java"
  }, segment {
  "segment": "util"
  }, segment {
  "segment": "regex"
  }, segment {
  "segment": "Pattern"
  }]
 }, function {
 "name": "SimpleSplitter implements Splitter ",
 "children": [definition {
  "name": "delimiter",
  "returns": symbol {
   "namespace": [segment {
    "segment": "String"
    }]
   },
  "modifiers": [modifier {
   "modifier-value": "private"
   }, modifier {
   "modifier-value": "final"
   }]
  }, method {
  "name": "SimpleSplitter",
  "returns": symbol {
   "namespace": [segment {
    "segment": "public"
    }]
   },
  "children": [assignment {
   "content": "delimiter",
   "child": "delimiter",
   "parent": symbol {
    "content": "this"
    }
   }, whitespace {
   }],
  "params": [definition {
   "name": "delimiter",
   "returns": symbol {
    "namespace": [segment {
     "segment": "String"
     }]
    }
   }]
  }, method {
  "name": "split",
  "returns": generic {
   "base": symbol {
    "namespace": [segment {
     "segment": "List"
     }]
    },
   "children": [symbol {
    "namespace": [segment {
     "segment": "String"
     }]
    }]
   },
  "children": [return {
   "value": invocation {
    "caller": property-access {
     "child": "of",
     "parent": symbol {
      "content": "List"
      }
     },
    "arguments": [invocation {
     "caller": property-access {
      "child": "split",
      "parent": symbol {
       "content": "input"
       }
      },
     "arguments": [invocation {
      "caller": property-access {
       "child": "quote",
       "parent": symbol {
        "content": "Pattern"
        }
       },
      "arguments": [symbol {
       "content": "delimiter"
       }]
      }]
     }]
    }
   }, whitespace {
   }],
  "annotations": [annotation {
   "value": "Override"
   }],
  "modifiers": [modifier {
   "modifier-value": "public"
   }],
  "params": [definition {
   "name": "input",
   "returns": symbol {
    "namespace": [segment {
     "segment": "String"
     }]
    }
   }]
  }, whitespace {
  }],
 "modifiers": [modifier {
  "modifier-value": "public"
  }]
 }, whitespace {
 }]
}