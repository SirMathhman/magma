{
"children": [import {
 "after-import": "
",
 "namespace": [segment {
  "segment": "magma"
  }, segment {
  "segment": "app"
  }, segment {
  "segment": "compile"
  }, segment {
  "segment": "rule"
  }, segment {
  "segment": "*"
  }]
 }, import {
 "after-import": "
",
 "namespace": [segment {
  "segment": "java"
  }, segment {
  "segment": "util"
  }, segment {
  "segment": "List"
  }]
 }, function {
 "name": "MagmaLang ",
 "children": [declaration {
  "name": "FUNCTION",
  "value": "function",
  "returns": symbol {
   "namespace": [segment {
    "segment": "String"
    }]
   },
  "modifiers": [modifier {
   "modifier-value": "public"
   }, modifier {
   "modifier-value": "static"
   }, modifier {
   "modifier-value": "final"
   }]
  }, declaration {
  "name": "TRAIT",
  "value": "trait",
  "returns": symbol {
   "namespace": [segment {
    "segment": "String"
    }]
   },
  "modifiers": [modifier {
   "modifier-value": "public"
   }, modifier {
   "modifier-value": "static"
   }, modifier {
   "modifier-value": "final"
   }]
  }, method {
  "name": "createRootRule",
  "returns": symbol {
   "namespace": [segment {
    "segment": "Rule"
    }]
   },
  "children": [return {
   "value": invocation {
    "caller": property-access {
     "child": "createChildrenRule",
     "parent": symbol {
      "content": "CommonLang"
      }
     },
    "arguments": [construction {
     "caller": symbol {
      "content": "OrRule"
      },
     "arguments": [invocation {
      "caller": property-access {
       "child": "of",
       "parent": symbol {
        "content": "List"
        }
       },
      "arguments": [invocation {
       "caller": property-access {
        "child": "createImportRule",
        "parent": symbol {
         "content": "CommonLang"
         }
        }
       }, construction {
       "caller": symbol {
        "content": "TypeRule"
        },
       "arguments": [string {
        "value": "trait"
        }, construction {
        "caller": symbol {
         "content": "PrefixRule"
         },
        "arguments": [string {
         "value": "trait"
         }, construction {
         "caller": symbol {
          "content": "EmptyRule"
          }
         }]
        }]
       }, construction {
       "caller": symbol {
        "content": "TypeRule"
        },
       "arguments": [string {
        "value": "function"
        }, construction {
        "caller": symbol {
         "content": "PrefixRule"
         },
        "arguments": [string {
         "value": "def "
         }, construction {
         "caller": symbol {
          "content": "SuffixRule"
          },
         "arguments": [construction {
          "caller": symbol {
           "content": "ExtractRule"
           },
          "arguments": [string {
           "value": "name"
           }]
          }, string {
          "value": "() => {}"
          }]
         }]
        }]
       }, invocation {
       "caller": property-access {
        "child": "createWhitespaceRule",
        "parent": symbol {
         "content": "CommonLang"
         }
        }
       }]
      }]
     }]
    }
   }, whitespace {
   }],
  "modifiers": [modifier {
   "modifier-value": "public"
   }, modifier {
   "modifier-value": "static"
   }]
  }, whitespace {
  }],
 "modifiers": [modifier {
  "modifier-value": "public"
  }]
 }, whitespace {
 }]
}