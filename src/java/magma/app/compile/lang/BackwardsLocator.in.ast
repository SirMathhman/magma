{
"children": [package {
 "namespace": ["magma", "app", "compile", "lang"]
 }, import {
 "namespace": ["magma", "app", "compile", "rule", "Locator"]
 }, import {
 "namespace": ["java", "util", "ArrayList"]
 }, import {
 "namespace": ["java", "util", "List"]
 }, import {
 "namespace": ["java", "util", "stream", "Stream"]
 }, record {
 "name": "BackwardsLocator",
 "interface": symbol {
  "value": "Locator"
  },
 "modifiers": [modifier {
  "content": "public"
  }],
 "params": [definition {
  "name": "delimiter",
  "before-name": "String"
  }],
 "children": [method {
  "name": "slice",
  "before-name": "@Override
    public String",
  "children": [return {
   "value": symbol {
    "content": "delimiter"
    }
   }],
  "params": []
  }, method {
  "name": "locate",
  "before-name": "@Override
    public Stream<Integer>",
  "children": [symbol {
   "content": "List<Integer> indices = new ArrayList<>();"
   }, symbol {
   "content": "int index = input.lastIndexOf(delimiter);"
   }, symbol {
   "content": "while (index != -1) {
            indices.add(index);
            index = input.lastIndexOf(delimiter, index - 1);
        }"
   }, return {
   "value": invocation {
    "caller": access {
     "name": "stream",
     "parent": symbol {
      "content": "indices"
      }
     },
    "arguments": []
    }
   }],
  "params": [definition {
   "name": "input",
   "before-name": "String"
   }]
  }]
 }]
}