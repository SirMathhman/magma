{
"children": [package {
 "namespace": [segment {
  "segment": "magma"
  }, segment {
  "segment": "app"
  }, segment {
  "segment": "compile"
  }, segment {
  "segment": "lang"
  }]
 }, import {
 "namespace": [segment {
  "segment": "magma"
  }, segment {
  "segment": "app"
  }, segment {
  "segment": "compile"
  }, segment {
  "segment": "rule"
  }, segment {
  "segment": "*"
  }]
 }, import {
 "namespace": [segment {
  "segment": "java"
  }, segment {
  "segment": "util"
  }, segment {
  "segment": "List"
  }]
 }, import-static {
 "namespace": [segment {
  "segment": "magma"
  }, segment {
  "segment": "app"
  }, segment {
  "segment": "compile"
  }, segment {
  "segment": "lang"
  }, segment {
  "segment": "CommonLang"
  }, segment {
  "segment": "MODIFIERS"
  }]
 }, import-static {
 "namespace": [segment {
  "segment": "magma"
  }, segment {
  "segment": "app"
  }, segment {
  "segment": "compile"
  }, segment {
  "segment": "lang"
  }, segment {
  "segment": "CommonLang"
  }, segment {
  "segment": "createModifiersRule"
  }]
 }, class {
 "name": "MagmaLang ",
 "children": [declaration {
  "name": "FUNCTION",
  "value": "function",
  "returns": symbol {
   "namespace": [segment {
    "segment": "String"
    }]
   },
  "modifiers": [modifier {
   "modifier-value": "public"
   }, modifier {
   "modifier-value": "static"
   }, modifier {
   "modifier-value": "final"
   }]
  }, declaration {
  "name": "TRAIT",
  "value": "trait",
  "returns": symbol {
   "namespace": [segment {
    "segment": "String"
    }]
   },
  "modifiers": [modifier {
   "modifier-value": "public"
   }, modifier {
   "modifier-value": "static"
   }, modifier {
   "modifier-value": "final"
   }]
  }, method {
  "name": "createRootRule",
  "returns": symbol {
   "namespace": [segment {
    "segment": "Rule"
    }]
   },
  "children": [return {
   "value": invocation {
    "caller": property-access {
     "child": "createChildrenRule",
     "parent": symbol {
      "content": "CommonLang"
      }
     },
    "arguments": [construction {
     "caller": symbol {
      "content": "OrRule"
      },
     "arguments": [invocation {
      "caller": property-access {
       "child": "of",
       "parent": symbol {
        "content": "List"
        }
       },
      "arguments": [invocation {
       "caller": property-access {
        "child": "createImportRule",
        "parent": symbol {
         "content": "CommonLang"
         }
        }
       }, construction {
       "caller": symbol {
        "content": "TypeRule"
        },
       "arguments": [string {
        "value": "trait"
        }, construction {
        "caller": symbol {
         "content": "PrefixRule"
         },
        "arguments": [string {
         "value": "trait"
         }, construction {
         "caller": symbol {
          "content": "EmptyRule"
          }
         }]
        }]
       }, invocation {
       "caller": symbol {
        "content": "createFunctionRule"
        }
       }, invocation {
       "caller": property-access {
        "child": "createWhitespaceRule",
        "parent": symbol {
         "content": "CommonLang"
         }
        }
       }]
      }]
     }]
    }
   }, whitespace {
   }],
  "modifiers": [modifier {
   "modifier-value": "public"
   }, modifier {
   "modifier-value": "static"
   }]
  }, method {
  "name": "createFunctionRule",
  "returns": symbol {
   "namespace": [segment {
    "segment": "TypeRule"
    }]
   },
  "children": [declaration {
   "name": "afterKeyword",
   "caller": symbol {
    "content": "SuffixRule"
    },
   "returns": symbol {
    "namespace": [segment {
     "segment": "var"
     }]
    },
   "arguments": [construction {
    "caller": symbol {
     "content": "ExtractRule"
     },
    "arguments": [string {
     "value": "name"
     }]
    }, string {
    "value": "() => {}"
    }],
   "modifiers": [modifier {
    "modifier-value": "final"
    }]
   }, declaration {
   "name": "withModifiers",
   "caller": symbol {
    "content": "LocatingRule"
    },
   "returns": symbol {
    "namespace": [segment {
     "segment": "var"
     }]
    },
   "arguments": [invocation {
    "caller": symbol {
     "content": "createModifiersRule"
     }
    }, construction {
    "caller": symbol {
     "content": "FirstLocator"
     },
    "arguments": [string {
     "value": " def "
     }]
    }, symbol {
    "content": "afterKeyword"
    }],
   "modifiers": [modifier {
    "modifier-value": "final"
    }]
   }, declaration {
   "name": "withoutModifiers",
   "caller": symbol {
    "content": "PrefixRule"
    },
   "returns": symbol {
    "namespace": [segment {
     "segment": "var"
     }]
    },
   "arguments": [string {
    "value": "def "
    }, symbol {
    "content": "afterKeyword"
    }],
   "modifiers": [modifier {
    "modifier-value": "final"
    }]
   }, return {
   "value": construction {
    "caller": symbol {
     "content": "TypeRule"
     },
    "arguments": [string {
     "value": "function"
     }, construction {
     "caller": symbol {
      "content": "OptionalNodeListRule"
      },
     "arguments": [symbol {
      "content": "MODIFIERS"
      }, symbol {
      "content": "withModifiers"
      }, symbol {
      "content": "withoutModifiers"
      }]
     }]
    }
   }, whitespace {
   }],
  "modifiers": [modifier {
   "modifier-value": "private"
   }, modifier {
   "modifier-value": "static"
   }]
  }, whitespace {
  }],
 "modifiers": [modifier {
  "modifier-value": "public"
  }]
 }, whitespace {
 }]
}