{
"children": [package {
 "namespace": [segment {
  "segment": "magma"
  }, segment {
  "segment": "app"
  }, segment {
  "segment": "compile"
  }, segment {
  "segment": "lang"
  }]
 }, import {
 "namespace": [segment {
  "segment": "magma"
  }, segment {
  "segment": "app"
  }, segment {
  "segment": "compile"
  }, segment {
  "segment": "rule"
  }, segment {
  "segment": "Filter"
  }]
 }, import {
 "namespace": [segment {
  "segment": "java"
  }, segment {
  "segment": "util"
  }, segment {
  "segment": "stream"
  }, segment {
  "segment": "IntStream"
  }]
 }, class {
 "name": "NumberFilter implements Filter ",
 "children": [method {
  "name": "allDigits",
  "returns": symbol {
   "namespace": [segment {
    "segment": "boolean"
    }]
   },
  "children": [return {
   "value": invocation {
    "caller": property-access {
     "child": "allMatch",
     "parent": invocation {
      "caller": property-access {
       "child": "range",
       "parent": symbol {
        "content": "IntStream"
        }
       },
      "arguments": [number {
       "value": "0"
       }, invocation {
       "caller": property-access {
        "child": "length",
        "parent": symbol {
         "content": "input"
         }
        }
       }]
      }
     },
    "arguments": [invocation {
     "caller": property-access {
      "child": "isDigit",
      "parent": lambda {
       "before-arrow": "i ",
       "after-arrow": " Character"
       }
      },
     "arguments": [invocation {
      "caller": property-access {
       "child": "charAt",
       "parent": symbol {
        "content": "input"
        }
       },
      "arguments": [symbol {
       "content": "i"
       }]
      }]
     }]
    }
   }, whitespace {
   }],
  "modifiers": [modifier {
   "modifier-value": "private"
   }, modifier {
   "modifier-value": "static"
   }],
  "params": [definition {
   "name": "input",
   "returns": symbol {
    "namespace": [segment {
     "segment": "String"
     }]
    }
   }]
  }, method {
  "name": "filter",
  "returns": symbol {
   "namespace": [segment {
    "segment": "boolean"
    }]
   },
  "children": [return {
   "value": invocation {
    "caller": ternary {
     "condition": invocation {
      "caller": property-access {
       "child": "startsWith",
       "parent": symbol {
        "content": "input"
        }
       },
      "arguments": [string {
       "value": "-"
       }]
      },
     "ifFalse": symbol {
      "content": "allDigits"
      },
     "ifTrue": invocation {
      "caller": symbol {
       "content": "allDigits"
       },
      "arguments": [invocation {
       "caller": property-access {
        "child": "substring",
        "parent": symbol {
         "content": "input"
         }
        },
       "arguments": [number {
        "value": "1"
        }]
       }]
      }
     },
    "arguments": [symbol {
     "content": "input"
     }]
    }
   }, whitespace {
   }],
  "annotations": [annotation {
   "value": "Override"
   }],
  "modifiers": [modifier {
   "modifier-value": "public"
   }],
  "params": [definition {
   "name": "input",
   "returns": symbol {
    "namespace": [segment {
     "segment": "String"
     }]
    }
   }]
  }, whitespace {
  }],
 "modifiers": [modifier {
  "modifier-value": "public"
  }]
 }, whitespace {
 }]
}