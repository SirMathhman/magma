{
"children": [import {
 "after-import": "
",
 "namespace": ["magma.app.compile.rule.Locator"]
 }, import {
 "after-import": "
",
 "namespace": ["java.util.stream.Stream"]
 }, import {
 "after-import": "
",
 "namespace": ["java.util.ArrayList"]
 }, import {
 "after-import": "
",
 "namespace": ["java.util.List"]
 }, function {
 "name": "ForwardsLocator",
 "interface": symbol {
  "value": "Locator"
  },
 "modifiers": [modifier {
  "modifier-value": "export"
  }],
 "params": [definition {
  "name": "delimiter",
  "returns": symbol {
   "value": "String"
   }
  }],
 "children": [method {
  "name": "slice",
  "returns": symbol {
   "value": "String"
   },
  "children": [return {
   "value": symbol {
    "content": "delimiter"
    }
   }],
  "annotations": [annotation {
   "value": "Override"
   }],
  "modifiers": [modifier {
   "modifier-value": "public"
   }]
  }, method {
  "name": "locate",
  "returns": generic {
   "base": symbol {
    "value": "Stream"
    },
   "children": [symbol {
    "value": "Integer"
    }]
   },
  "children": [declaration {
   "name": "indices",
   "caller": symbol {
    "content": "ArrayList"
    },
   "returns": generic {
    "base": symbol {
     "value": "List"
     },
    "children": [symbol {
     "value": "Integer"
     }]
    }
   }, declaration {
   "name": "index",
   "caller": property-access {
    "child": "indexOf",
    "parent": symbol {
     "content": "input"
     }
    },
   "returns": symbol {
    "value": "int"
    },
   "arguments": [symbol {
    "content": "delimiter"
    }]
   }, while {
   "content": " (index != -1) {
            indices.add(index);
            index = input.indexOf(delimiter, index + 1);
        }"
   }, return {
   "value": invocation {
    "caller": property-access {
     "child": "stream",
     "parent": symbol {
      "content": "indices"
      }
     }
    }
   }],
  "annotations": [annotation {
   "value": "Override"
   }],
  "modifiers": [modifier {
   "modifier-value": "public"
   }],
  "params": [definition {
   "name": "input",
   "returns": symbol {
    "value": "String"
    }
   }]
  }]
 }]
}