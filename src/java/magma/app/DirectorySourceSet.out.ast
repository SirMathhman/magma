{
"children": [import {
 "namespace": ["magma", "api", "result", "Err"]
 }, import {
 "namespace": ["magma", "api", "result", "Ok"]
 }, import {
 "namespace": ["magma", "api", "result", "Result"]
 }, import {
 "namespace": ["java", "io", "IOException"]
 }, import {
 "namespace": ["java", "nio", "file", "Files"]
 }, import {
 "namespace": ["java", "nio", "file", "Path"]
 }, import {
 "namespace": ["java", "util", "Set"]
 }, import {
 "namespace": ["java", "util", "stream", "Collectors"]
 }, function {
 "name": "DirectorySourceSet",
 "modifiers": ["public"],
 "interface": symbol {
  "type": "SourceSet"
  },
 "children": [method {
  "name": "collect",
  "modifiers": ["public", "Result<Set<Path>,"],
  "returns": symbol {
   "type": "IOException>"
   },
  "annotations": [{
   "annotation": "Override"
   }],
  "children": [symbol {
   "content": "try (var stream = Files.walk(root)) {
            return new Ok<>(stream
                    .filter(path -> path.toString().endsWith(".java"))
                    .collect(Collectors.toSet()));
        }"
   }, symbol {
   "content": "catch (IOException e) {
            return new Err<>(e);
        }"
   }]
  }],
 "params": [definition {
  "name": "root",
  "type": symbol {
   "type": "Path"
   }
  }]
 }]
}