{
"children": [import {
 "after-import": "
",
 "namespace": [segment {
  "segment": "magma"
  }, segment {
  "segment": "api"
  }, segment {
  "segment": "list"
  }, segment {
  "segment": "ListHead"
  }]
 }, import {
 "after-import": "
",
 "namespace": [segment {
  "segment": "magma"
  }, segment {
  "segment": "api"
  }, segment {
  "segment": "option"
  }, segment {
  "segment": "None"
  }]
 }, import {
 "after-import": "
",
 "namespace": [segment {
  "segment": "magma"
  }, segment {
  "segment": "api"
  }, segment {
  "segment": "option"
  }, segment {
  "segment": "Option"
  }]
 }, import {
 "after-import": "
",
 "namespace": [segment {
  "segment": "magma"
  }, segment {
  "segment": "api"
  }, segment {
  "segment": "option"
  }, segment {
  "segment": "Some"
  }]
 }, import {
 "after-import": "
",
 "namespace": [segment {
  "segment": "magma"
  }, segment {
  "segment": "api"
  }, segment {
  "segment": "stream"
  }, segment {
  "segment": "HeadedStream"
  }]
 }, import {
 "after-import": "
",
 "namespace": [segment {
  "segment": "magma"
  }, segment {
  "segment": "api"
  }, segment {
  "segment": "stream"
  }, segment {
  "segment": "Stream"
  }]
 }, import {
 "after-import": "
",
 "namespace": [segment {
  "segment": "java"
  }, segment {
  "segment": "util"
  }, segment {
  "segment": "List"
  }]
 }, function {
 "name": "JavaList",
 "interface": generic {
  "base": symbol {
   "namespace": [segment {
    "segment": "magma"
    }, segment {
    "segment": "api"
    }, segment {
    "segment": "list"
    }, segment {
    "segment": "List"
    }]
   },
  "children": [symbol {
   "namespace": [segment {
    "segment": "T"
    }]
   }]
  },
 "type-params": [symbol {
  "namespace": [segment {
   "segment": "T"
   }]
  }],
 "modifiers": [modifier {
  "modifier-value": "public"
  }, modifier {
  "modifier-value": "class"
  }],
 "params": [definition {
  "name": "hidden",
  "returns": generic {
   "base": symbol {
    "namespace": [segment {
     "segment": "List"
     }]
    },
   "children": [symbol {
    "namespace": [segment {
     "segment": "T"
     }]
    }]
   }
  }],
 "children": [method {
  "name": "stream",
  "returns": generic {
   "base": symbol {
    "namespace": [segment {
     "segment": "Stream"
     }]
    },
   "children": [symbol {
    "namespace": [segment {
     "segment": "T"
     }]
    }]
   },
  "children": [return {
   "value": construction {
    "caller": symbol {
     "content": "HeadedStream"
     },
    "type-arguments": [symbol {
     "namespace": [segment {
      "segment": "T"
      }]
     }],
    "arguments": [construction {
     "caller": symbol {
      "content": "ListHead"
      },
     "type-arguments": [symbol {
      "namespace": [segment {
       "segment": "T"
       }]
      }],
     "arguments": [symbol {
      "content": "this"
      }]
     }]
    }
   }, whitespace {
   }],
  "annotations": [annotation {
   "value": "Override"
   }],
  "modifiers": [modifier {
   "modifier-value": "public"
   }]
  }, method {
  "name": "size",
  "returns": symbol {
   "namespace": [segment {
    "segment": "int"
    }]
   },
  "children": [return {
   "value": invocation {
    "caller": property-access {
     "child": "size",
     "parent": symbol {
      "content": "hidden"
      }
     }
    }
   }, whitespace {
   }],
  "annotations": [annotation {
   "value": "Override"
   }],
  "modifiers": [modifier {
   "modifier-value": "public"
   }]
  }, method {
  "name": "get",
  "returns": generic {
   "base": symbol {
    "namespace": [segment {
     "segment": "Option"
     }]
    },
   "children": [symbol {
    "namespace": [segment {
     "segment": "T"
     }]
    }]
   },
  "children": [if {
   "content": "(index >= 0 && index < hidden.size()) {
            return new Some<>(hidden.get(index));
        }"
   }, else {
   "children": [return {
    "value": construction {
     "caller": symbol {
      "content": "None"
      }
     }
    }, whitespace {
    }]
   }, whitespace {
   }],
  "annotations": [annotation {
   "value": "Override"
   }],
  "modifiers": [modifier {
   "modifier-value": "public"
   }],
  "params": [definition {
   "name": "index",
   "returns": symbol {
    "namespace": [segment {
     "segment": "int"
     }]
    }
   }]
  }, implements {
  }]
 }, whitespace {
 }]
}