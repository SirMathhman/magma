import stdlib;

trait Drop<T> {
    drop : Self => Void;
}

struct NonNull<T> {
    ref : *mut T;
}

struct Box<T> {
    ref : NonNull<T>;
}

impl Drop<T> for Box<T> {
    drop : self => unsafe free(self.ref.ref);
}

inline def Box<T>(value : T) -> Option<Box<T>> {
    unsafe {
        let ref : *mut T = malloc(sizeof T) as *mut T;
        if !ref return None;

        *ref = value;
        return Some({ref : {ref}});
    }
}
